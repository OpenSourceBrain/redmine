c
n
url
n
c
File.read(publicResourcesPath + geppettoResourcesPath + simulationTemplates + "GeppettoSWCModel.xmi")
publicResourcesPath + geppettoResourcesPath + simulationTemplates
geppettoModelFile
c
 enabled_modules.loaded? ? enabled_modules.map(&:name) : enabled_modules.pluck(:name)
allowed_actions
n
s
n
s
node.name
c
node.name
node
c
allowed_actions
action[:action]
action[:controller]
allowed_actions.include? "#{action[:controller]}/#{action[:action]}"
s
archived?
s
context.allows_to?(action)
action
context
s
node.url
!user.allowed_to?(node.url, project)
s
 allowed_node?(node, User.current, project)
node.name
n
node.name
n
node.name
n
node.name
n
node.name
n
node.name
node.id
allowed_node?(node, User.current, project)  
n
allowed_node?(node, User.current, project)  
node
c
links
node
n
menu_items_for(menu, project)
c
n
s
n
c
n
format
n
params[:jump]
c
n
s
errors.add_on_empty
n
Member.new(:user => User.current, :roles => [r])
n
Role.givable.first
Role.givable.find_by_id(Setting.new_project_user_role_id.to_i) 
n
User.current.admin?
n
params[:project].has_key?('parent_id')
@project.set_allowed_parent!(params[:project]['parent_id'])
n
@project.save
@project
validateGitHubRepo(@githubRepo)
validate_parent_id
n
c
n
getCustomField(@project,'GitHub repository')
n
Project.new 
n
Tracker.sorted.all
n
IssueCustomField.sorted.all
c
n
s
roles
member_roles
errors
c
@group.memberships
@group
c
s
c
n
c
n
s
c
@group.users.each
n
@group.memberships.empty?
@group.memberships
@group
c
n
target_custom_values
n
custom_field_values
n
c
n
c
AnonymousUser.exists?
AnonymousUser
c
AnonymousUser
AnonymousUser.first
c
Issue
c
continue
c
where(:name => name).first
where(:name => name)
n
c
autologin_user
n
session
n
2n
c
n
c
continue
c
custom_field_tag_with_label :project, value
n
s
custom_field_tag_with_label :project, value
c
custom_field_tag_with_label :project, value
c
custom_field_tag_with_label :project, value
c
value
@project.custom_field_values
c
value
custom_field
c
outputLink
n
outputLink
n
s
getBaseBadge("#{tooltipLabel}. Click here to see other models with same characteristics.", create_link_to_search_by_custom_field(fieldId, fieldValueItem, label, '~'))
s
n
s
c
n
s
c
outputLink
n
s
n
c
n
fieldValue
n
c
text
value
 create_link_to_search_by_custom_field(id, value, value)
c
s
c
n
c
n
s
Redmine::WikiFormatting
n
s
c
n
c
n
s
n
s
c
s
c
s
c
value
@@badges[badge_type]
n
s
badge_type
s
c
badge_type
s
project
c
n
 @@badges[badge_type][value]
value
n
s
project
c
badge_type
value
n
s
continue
c
continue
badge_type
n
s
c
n
c
continue
c
getCustomFieldAndId(project, 'PyNN support')
getCustomFieldAndId(project, 'PyNNs upport')
getCustomFieldAndId(project, 'PyNN Support')
getCustomFieldAndId(project, 'NeuroML v1.x Support')
getCustomFieldAndId(project, 'NeuroML v1.x support')
project
value
badge_type
n
s
c
cc
